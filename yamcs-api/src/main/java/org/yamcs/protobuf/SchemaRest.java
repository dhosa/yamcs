// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from rest.proto

package org.yamcs.protobuf;


public final class SchemaRest
{

    public static final class ListParametersResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListParametersResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListParametersResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListParametersResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListParametersResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListParametersResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListParametersResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Mdb.ParameterInfo parameter : message.getParameterList())
                    output.writeObject(1, parameter, org.yamcs.protobuf.SchemaMdb.ParameterInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListParametersResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListParametersResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListParametersResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListParametersResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListParametersResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListParametersResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addParameter(input.mergeObject(org.yamcs.protobuf.Mdb.ParameterInfo.newBuilder(), org.yamcs.protobuf.SchemaMdb.ParameterInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListParametersResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListParametersResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListParametersResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListParametersResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListParametersResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "parameter";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("parameter", 1);
        }
    }

    public static final class BulkGetParameterRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId id : message.getIdList())
                    output.writeObject(1, id, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.BulkGetParameterRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "id";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("id", 1);
        }
    }

    public static final class BulkGetParameterResponse
    {

        public static final class GetParameterResponse
        {
            public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.MessageSchema WRITE =
                new org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.MessageSchema();
            public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.BuilderSchema MERGE =
                new org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.BuilderSchema();
            
            public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse>
            {
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse message) throws java.io.IOException
                {
                    if(message.hasId())
                        output.writeObject(1, message.getId(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, false);

                    if(message.hasParameter())
                        output.writeObject(2, message.getParameter(), org.yamcs.protobuf.SchemaMdb.ParameterInfo.WRITE, false);

                }
                public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse message)
                {
                    return message.isInitialized();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse> typeClass()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.class.getName();
                }
                //unused
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse message) throws java.io.IOException {}
                public org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse newMessage() { return null; }
            }
            public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder>
            {
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder builder) throws java.io.IOException
                {
                    for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                    {
                        switch(number)
                        {
                            case 0:
                                return;
                            case 1:
                                builder.setId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                                break;
                            case 2:
                                builder.setParameter(input.mergeObject(org.yamcs.protobuf.Mdb.ParameterInfo.newBuilder(), org.yamcs.protobuf.SchemaMdb.ParameterInfo.MERGE));

                                break;
                            default:
                                input.handleUnknownField(number, this);
                        }
                    }
                }
                public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder builder)
                {
                    return builder.isInitialized();
                }
                public org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder newMessage()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.newBuilder();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder> typeClass()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.class.getName();
                }
                //unused
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.Builder builder) throws java.io.IOException {}
            }
            public static java.lang.String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "id";
                    case 2: return "parameter";
                    default: return null;
                }
            }
            public static int getFieldNumber(java.lang.String name)
            {
                java.lang.Integer number = fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }
            private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
            static
            {
                fieldMap.put("id", 1);
                fieldMap.put("parameter", 2);
            }
        }

        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse response : message.getResponseList())
                    output.writeObject(1, response, org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.BulkGetParameterResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addResponse(input.mergeObject(org.yamcs.protobuf.Rest.BulkGetParameterResponse.GetParameterResponse.newBuilder(), org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.GetParameterResponse.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "response";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("response", 1);
        }
    }

    public static final class BulkGetParameterValueRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterValueRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterValueRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId id : message.getIdList())
                    output.writeObject(1, id, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

                if(message.hasFromCache())
                    output.writeBool(2, message.getFromCache(), false);
                if(message.hasTimeout())
                    output.writeUInt64(3, message.getTimeout(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterValueRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterValueRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterValueRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.BulkGetParameterValueRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setFromCache(input.readBool());
                            break;
                        case 3:
                            builder.setTimeout(input.readUInt64());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterValueRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "id";
                case 2: return "fromCache";
                case 3: return "timeout";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("id", 1);
            fieldMap.put("fromCache", 2);
            fieldMap.put("timeout", 3);
        }
    }

    public static final class BulkGetParameterValueResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterValueResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterValueResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.BulkGetParameterValueResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.BulkGetParameterValueResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterValueResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterValueResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Pvalue.ParameterValue value : message.getValueList())
                    output.writeObject(1, value, org.yamcs.protobuf.SchemaPvalue.ParameterValue.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterValueResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterValueResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterValueResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.BulkGetParameterValueResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addValue(input.mergeObject(org.yamcs.protobuf.Pvalue.ParameterValue.newBuilder(), org.yamcs.protobuf.SchemaPvalue.ParameterValue.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetParameterValueResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetParameterValueResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "value";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("value", 1);
        }
    }

    public static final class BulkGetContainerValueRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.BulkGetContainerValueRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.BulkGetContainerValueRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.BulkGetContainerValueRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.BulkGetContainerValueRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetContainerValueRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetContainerValueRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId id : message.getIdList())
                    output.writeObject(1, id, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

                if(message.hasFromCache())
                    output.writeBool(2, message.getFromCache(), false);
                if(message.hasTimeout())
                    output.writeUInt64(3, message.getTimeout(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetContainerValueRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetContainerValueRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetContainerValueRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetContainerValueRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetContainerValueRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.BulkGetContainerValueRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setFromCache(input.readBool());
                            break;
                        case 3:
                            builder.setTimeout(input.readUInt64());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetContainerValueRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetContainerValueRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetContainerValueRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "id";
                case 2: return "fromCache";
                case 3: return "timeout";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("id", 1);
            fieldMap.put("fromCache", 2);
            fieldMap.put("timeout", 3);
        }
    }

    public static final class BulkGetContainerValueResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.BulkGetContainerValueResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.BulkGetContainerValueResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.BulkGetContainerValueResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.BulkGetContainerValueResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetContainerValueResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetContainerValueResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Cvalue.ContainerValue value : message.getValueList())
                    output.writeObject(1, value, org.yamcs.protobuf.SchemaCvalue.ContainerValue.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetContainerValueResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetContainerValueResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetContainerValueResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetContainerValueResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetContainerValueResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.BulkGetContainerValueResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addValue(input.mergeObject(org.yamcs.protobuf.Cvalue.ContainerValue.newBuilder(), org.yamcs.protobuf.SchemaCvalue.ContainerValue.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetContainerValueResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkGetContainerValueResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkGetContainerValueResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "value";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("value", 1);
        }
    }

    public static final class BulkSetParameterValueRequest
    {

        public static final class SetParameterValueRequest
        {
            public static final org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.SetParameterValueRequest.MessageSchema WRITE =
                new org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.SetParameterValueRequest.MessageSchema();
            public static final org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.SetParameterValueRequest.BuilderSchema MERGE =
                new org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.SetParameterValueRequest.BuilderSchema();
            
            public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest>
            {
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest message) throws java.io.IOException
                {
                    if(message.hasId())
                        output.writeObject(1, message.getId(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, false);

                    if(message.hasValue())
                        output.writeObject(2, message.getValue(), org.yamcs.protobuf.SchemaYamcs.Value.WRITE, false);

                }
                public boolean isInitialized(org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest message)
                {
                    return message.isInitialized();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.SetParameterValueRequest.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.SetParameterValueRequest.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest> typeClass()
                {
                    return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.class.getName();
                }
                //unused
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest message) throws java.io.IOException {}
                public org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest newMessage() { return null; }
            }
            public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.Builder>
            {
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.Builder builder) throws java.io.IOException
                {
                    for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                    {
                        switch(number)
                        {
                            case 0:
                                return;
                            case 1:
                                builder.setId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                                break;
                            case 2:
                                builder.setValue(input.mergeObject(org.yamcs.protobuf.Yamcs.Value.newBuilder(), org.yamcs.protobuf.SchemaYamcs.Value.MERGE));

                                break;
                            default:
                                input.handleUnknownField(number, this);
                        }
                    }
                }
                public boolean isInitialized(org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.Builder builder)
                {
                    return builder.isInitialized();
                }
                public org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.Builder newMessage()
                {
                    return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.newBuilder();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.SetParameterValueRequest.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.SetParameterValueRequest.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.Builder> typeClass()
                {
                    return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.Builder.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.class.getName();
                }
                //unused
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.Builder builder) throws java.io.IOException {}
            }
            public static java.lang.String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "id";
                    case 2: return "value";
                    default: return null;
                }
            }
            public static int getFieldNumber(java.lang.String name)
            {
                java.lang.Integer number = fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }
            private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
            static
            {
                fieldMap.put("id", 1);
                fieldMap.put("value", 2);
            }
        }

        public static final org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkSetParameterValueRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkSetParameterValueRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest request : message.getRequestList())
                    output.writeObject(1, request, org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.SetParameterValueRequest.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkSetParameterValueRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkSetParameterValueRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkSetParameterValueRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.BulkSetParameterValueRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addRequest(input.mergeObject(org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.SetParameterValueRequest.newBuilder(), org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.SetParameterValueRequest.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.BulkSetParameterValueRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.BulkSetParameterValueRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "request";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("request", 1);
        }
    }

    public static final class ListContainersResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListContainersResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListContainersResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListContainersResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListContainersResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListContainersResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListContainersResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Mdb.ContainerInfo container : message.getContainerList())
                    output.writeObject(1, container, org.yamcs.protobuf.SchemaMdb.ContainerInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListContainersResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListContainersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListContainersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListContainersResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListContainersResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListContainersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListContainersResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListContainersResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListContainersResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListContainersResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListContainersResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addContainer(input.mergeObject(org.yamcs.protobuf.Mdb.ContainerInfo.newBuilder(), org.yamcs.protobuf.SchemaMdb.ContainerInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListContainersResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListContainersResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListContainersResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListContainersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListContainersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListContainersResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListContainersResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListContainersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListContainersResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListContainersResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "container";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("container", 1);
        }
    }

    public static final class ListCommandsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListCommandsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListCommandsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListCommandsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListCommandsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListCommandsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListCommandsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Mdb.CommandInfo command : message.getCommandList())
                    output.writeObject(1, command, org.yamcs.protobuf.SchemaMdb.CommandInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListCommandsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListCommandsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListCommandsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListCommandsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListCommandsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListCommandsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addCommand(input.mergeObject(org.yamcs.protobuf.Mdb.CommandInfo.newBuilder(), org.yamcs.protobuf.SchemaMdb.CommandInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListCommandsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListCommandsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListCommandsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListCommandsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListCommandsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "command";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("command", 1);
        }
    }

    public static final class ListAlgorithmsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListAlgorithmsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListAlgorithmsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListAlgorithmsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListAlgorithmsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListAlgorithmsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListAlgorithmsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Mdb.AlgorithmInfo algorithm : message.getAlgorithmList())
                    output.writeObject(1, algorithm, org.yamcs.protobuf.SchemaMdb.AlgorithmInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListAlgorithmsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListAlgorithmsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListAlgorithmsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListAlgorithmsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListAlgorithmsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListAlgorithmsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListAlgorithmsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListAlgorithmsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListAlgorithmsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListAlgorithmsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListAlgorithmsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addAlgorithm(input.mergeObject(org.yamcs.protobuf.Mdb.AlgorithmInfo.newBuilder(), org.yamcs.protobuf.SchemaMdb.AlgorithmInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListAlgorithmsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListAlgorithmsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListAlgorithmsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListAlgorithmsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListAlgorithmsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListAlgorithmsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListAlgorithmsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListAlgorithmsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListAlgorithmsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListAlgorithmsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "algorithm";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("algorithm", 1);
        }
    }

    public static final class ListClientsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListClientsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListClientsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListClientsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListClientsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListClientsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListClientsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.YamcsManagement.ClientInfo client : message.getClientList())
                    output.writeObject(1, client, org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListClientsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListClientsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListClientsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListClientsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListClientsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListClientsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListClientsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListClientsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addClient(input.mergeObject(org.yamcs.protobuf.YamcsManagement.ClientInfo.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListClientsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListClientsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListClientsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListClientsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListClientsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListClientsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "client";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("client", 1);
        }
    }

    public static final class PatchClientRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.PatchClientRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.PatchClientRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.PatchClientRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.PatchClientRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.PatchClientRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.PatchClientRequest message) throws java.io.IOException
            {
                if(message.hasProcessor())
                    output.writeString(1, message.getProcessor(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.PatchClientRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.PatchClientRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.PatchClientRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.PatchClientRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.PatchClientRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.PatchClientRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.PatchClientRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.PatchClientRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.PatchClientRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.PatchClientRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.PatchClientRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setProcessor(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.PatchClientRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.PatchClientRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.PatchClientRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.PatchClientRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.PatchClientRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.PatchClientRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.PatchClientRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.PatchClientRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.PatchClientRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.PatchClientRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "processor";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("processor", 1);
        }
    }

    public static final class ListProcessorsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListProcessorsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListProcessorsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListProcessorsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListProcessorsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListProcessorsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListProcessorsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.YamcsManagement.ProcessorInfo processor : message.getProcessorList())
                    output.writeObject(1, processor, org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListProcessorsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListProcessorsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListProcessorsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListProcessorsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListProcessorsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListProcessorsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListProcessorsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListProcessorsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListProcessorsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListProcessorsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListProcessorsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addProcessor(input.mergeObject(org.yamcs.protobuf.YamcsManagement.ProcessorInfo.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListProcessorsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListProcessorsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListProcessorsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListProcessorsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListProcessorsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListProcessorsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListProcessorsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListProcessorsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListProcessorsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListProcessorsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "processor";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("processor", 1);
        }
    }

    public static final class ListCommandQueuesResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListCommandQueuesResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListCommandQueuesResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListCommandQueuesResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListCommandQueuesResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListCommandQueuesResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListCommandQueuesResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Commanding.CommandQueueInfo queue : message.getQueueList())
                    output.writeObject(1, queue, org.yamcs.protobuf.SchemaCommanding.CommandQueueInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListCommandQueuesResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandQueuesResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandQueuesResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListCommandQueuesResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListCommandQueuesResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListCommandQueuesResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListCommandQueuesResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListCommandQueuesResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListCommandQueuesResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListCommandQueuesResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListCommandQueuesResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addQueue(input.mergeObject(org.yamcs.protobuf.Commanding.CommandQueueInfo.newBuilder(), org.yamcs.protobuf.SchemaCommanding.CommandQueueInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListCommandQueuesResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListCommandQueuesResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListCommandQueuesResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandQueuesResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListCommandQueuesResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListCommandQueuesResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListCommandQueuesResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListCommandQueuesResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListCommandQueuesResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListCommandQueuesResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "queue";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("queue", 1);
        }
    }

    public static final class IssueCommandRequest
    {

        public static final class Assignment
        {
            public static final org.yamcs.protobuf.SchemaRest.IssueCommandRequest.Assignment.MessageSchema WRITE =
                new org.yamcs.protobuf.SchemaRest.IssueCommandRequest.Assignment.MessageSchema();
            public static final org.yamcs.protobuf.SchemaRest.IssueCommandRequest.Assignment.BuilderSchema MERGE =
                new org.yamcs.protobuf.SchemaRest.IssueCommandRequest.Assignment.BuilderSchema();
            
            public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment>
            {
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment message) throws java.io.IOException
                {
                    if(message.hasName())
                        output.writeString(1, message.getName(), false);
                    if(message.hasValue())
                        output.writeString(2, message.getValue(), false);
                }
                public boolean isInitialized(org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment message)
                {
                    return message.isInitialized();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaRest.IssueCommandRequest.Assignment.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaRest.IssueCommandRequest.Assignment.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment> typeClass()
                {
                    return org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.class.getName();
                }
                //unused
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment message) throws java.io.IOException {}
                public org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment newMessage() { return null; }
            }
            public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.Builder>
            {
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.Builder builder) throws java.io.IOException
                {
                    for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                    {
                        switch(number)
                        {
                            case 0:
                                return;
                            case 1:
                                builder.setName(input.readString());
                                break;
                            case 2:
                                builder.setValue(input.readString());
                                break;
                            default:
                                input.handleUnknownField(number, this);
                        }
                    }
                }
                public boolean isInitialized(org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.Builder builder)
                {
                    return builder.isInitialized();
                }
                public org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.Builder newMessage()
                {
                    return org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.newBuilder();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaRest.IssueCommandRequest.Assignment.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaRest.IssueCommandRequest.Assignment.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.Builder> typeClass()
                {
                    return org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.Builder.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.class.getName();
                }
                //unused
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.Builder builder) throws java.io.IOException {}
            }
            public static java.lang.String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "name";
                    case 2: return "value";
                    default: return null;
                }
            }
            public static int getFieldNumber(java.lang.String name)
            {
                java.lang.Integer number = fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }
            private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
            static
            {
                fieldMap.put("name", 1);
                fieldMap.put("value", 2);
            }
        }

        public static final org.yamcs.protobuf.SchemaRest.IssueCommandRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.IssueCommandRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.IssueCommandRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.IssueCommandRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.IssueCommandRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.IssueCommandRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment assignment : message.getAssignmentList())
                    output.writeObject(1, assignment, org.yamcs.protobuf.SchemaRest.IssueCommandRequest.Assignment.WRITE, true);

                if(message.hasOrigin())
                    output.writeString(2, message.getOrigin(), false);
                if(message.hasSequenceNumber())
                    output.writeInt32(3, message.getSequenceNumber(), false);
                if(message.hasDryRun())
                    output.writeBool(4, message.getDryRun(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.IssueCommandRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.IssueCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.IssueCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.IssueCommandRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.IssueCommandRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.IssueCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.IssueCommandRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.IssueCommandRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.IssueCommandRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.IssueCommandRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.IssueCommandRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addAssignment(input.mergeObject(org.yamcs.protobuf.Rest.IssueCommandRequest.Assignment.newBuilder(), org.yamcs.protobuf.SchemaRest.IssueCommandRequest.Assignment.MERGE));

                            break;
                        case 2:
                            builder.setOrigin(input.readString());
                            break;
                        case 3:
                            builder.setSequenceNumber(input.readInt32());
                            break;
                        case 4:
                            builder.setDryRun(input.readBool());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.IssueCommandRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.IssueCommandRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.IssueCommandRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.IssueCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.IssueCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.IssueCommandRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.IssueCommandRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.IssueCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.IssueCommandRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.IssueCommandRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "assignment";
                case 2: return "origin";
                case 3: return "sequenceNumber";
                case 4: return "dryRun";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("assignment", 1);
            fieldMap.put("origin", 2);
            fieldMap.put("sequenceNumber", 3);
            fieldMap.put("dryRun", 4);
        }
    }

    public static final class IssueCommandResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.IssueCommandResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.IssueCommandResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.IssueCommandResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.IssueCommandResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.IssueCommandResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.IssueCommandResponse message) throws java.io.IOException
            {
                if(message.hasQueue())
                    output.writeString(1, message.getQueue(), false);
                if(message.hasSource())
                    output.writeString(2, message.getSource(), false);
                if(message.hasHex())
                    output.writeString(3, message.getHex(), false);
                if(message.hasBinary())
                    output.writeByteArray(4, message.getBinary().toByteArray(), false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.IssueCommandResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.IssueCommandResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.IssueCommandResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.IssueCommandResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.IssueCommandResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.IssueCommandResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.IssueCommandResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.IssueCommandResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.IssueCommandResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.IssueCommandResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.IssueCommandResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setQueue(input.readString());
                            break;
                        case 2:
                            builder.setSource(input.readString());
                            break;
                        case 3:
                            builder.setHex(input.readString());
                            break;
                        case 4:
                            builder.setBinary(com.google.protobuf.ByteString.copyFrom(input.readByteArray()));
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.IssueCommandResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.IssueCommandResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.IssueCommandResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.IssueCommandResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.IssueCommandResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.IssueCommandResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.IssueCommandResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.IssueCommandResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.IssueCommandResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.IssueCommandResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "queue";
                case 2: return "source";
                case 3: return "hex";
                case 4: return "binary";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("queue", 1);
            fieldMap.put("source", 2);
            fieldMap.put("hex", 3);
            fieldMap.put("binary", 4);
        }
    }

    public static final class CreateProcessorRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.CreateProcessorRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.CreateProcessorRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.CreateProcessorRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.CreateProcessorRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.CreateProcessorRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.CreateProcessorRequest message) throws java.io.IOException
            {
                if(message.hasName())
                    output.writeString(1, message.getName(), false);
                if(message.hasStart())
                    output.writeString(2, message.getStart(), false);
                if(message.hasStop())
                    output.writeString(3, message.getStop(), false);
                if(message.hasLoop())
                    output.writeBool(4, message.getLoop(), false);
                if(message.hasSpeed())
                    output.writeString(5, message.getSpeed(), false);
                for(int clientId : message.getClientIdList())
                    output.writeInt32(6, clientId, true);
                for(String paraname : message.getParanameList())
                    output.writeString(7, paraname, true);
                for(String ppgroup : message.getPpgroupList())
                    output.writeString(8, ppgroup, true);
                for(String packetname : message.getPacketnameList())
                    output.writeString(9, packetname, true);
                if(message.hasCmdhist())
                    output.writeBool(10, message.getCmdhist(), false);
                if(message.hasPersistent())
                    output.writeBool(11, message.getPersistent(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.CreateProcessorRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.CreateProcessorRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.CreateProcessorRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.CreateProcessorRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.CreateProcessorRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.CreateProcessorRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.CreateProcessorRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.CreateProcessorRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.CreateProcessorRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.CreateProcessorRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.CreateProcessorRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setName(input.readString());
                            break;
                        case 2:
                            builder.setStart(input.readString());
                            break;
                        case 3:
                            builder.setStop(input.readString());
                            break;
                        case 4:
                            builder.setLoop(input.readBool());
                            break;
                        case 5:
                            builder.setSpeed(input.readString());
                            break;
                        case 6:
                            builder.addClientId(input.readInt32());
                            break;
                        case 7:
                            builder.addParaname(input.readString());
                            break;
                        case 8:
                            builder.addPpgroup(input.readString());
                            break;
                        case 9:
                            builder.addPacketname(input.readString());
                            break;
                        case 10:
                            builder.setCmdhist(input.readBool());
                            break;
                        case 11:
                            builder.setPersistent(input.readBool());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.CreateProcessorRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.CreateProcessorRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.CreateProcessorRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.CreateProcessorRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.CreateProcessorRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.CreateProcessorRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.CreateProcessorRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.CreateProcessorRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.CreateProcessorRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.CreateProcessorRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "name";
                case 2: return "start";
                case 3: return "stop";
                case 4: return "loop";
                case 5: return "speed";
                case 6: return "clientId";
                case 7: return "paraname";
                case 8: return "ppgroup";
                case 9: return "packetname";
                case 10: return "cmdhist";
                case 11: return "persistent";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("name", 1);
            fieldMap.put("start", 2);
            fieldMap.put("stop", 3);
            fieldMap.put("loop", 4);
            fieldMap.put("speed", 5);
            fieldMap.put("clientId", 6);
            fieldMap.put("paraname", 7);
            fieldMap.put("ppgroup", 8);
            fieldMap.put("packetname", 9);
            fieldMap.put("cmdhist", 10);
            fieldMap.put("persistent", 11);
        }
    }

    public static final class PatchProcessorRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.PatchProcessorRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.PatchProcessorRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.PatchProcessorRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.PatchProcessorRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.PatchProcessorRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.PatchProcessorRequest message) throws java.io.IOException
            {
                if(message.hasState())
                    output.writeString(1, message.getState(), false);
                if(message.hasSeekTime())
                    output.writeInt64(2, message.getSeekTime(), false);
                if(message.hasSpeed())
                    output.writeString(3, message.getSpeed(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.PatchProcessorRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.PatchProcessorRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.PatchProcessorRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.PatchProcessorRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.PatchProcessorRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.PatchProcessorRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.PatchProcessorRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.PatchProcessorRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.PatchProcessorRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.PatchProcessorRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.PatchProcessorRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setState(input.readString());
                            break;
                        case 2:
                            builder.setSeekTime(input.readInt64());
                            break;
                        case 3:
                            builder.setSpeed(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.PatchProcessorRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.PatchProcessorRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.PatchProcessorRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.PatchProcessorRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.PatchProcessorRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.PatchProcessorRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.PatchProcessorRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.PatchProcessorRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.PatchProcessorRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.PatchProcessorRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "state";
                case 2: return "seekTime";
                case 3: return "speed";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("state", 1);
            fieldMap.put("seekTime", 2);
            fieldMap.put("speed", 3);
        }
    }

    public static final class StreamSubscribeRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.StreamSubscribeRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.StreamSubscribeRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.StreamSubscribeRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.StreamSubscribeRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.StreamSubscribeRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.StreamSubscribeRequest message) throws java.io.IOException
            {
                if(message.hasStream())
                    output.writeString(1, message.getStream(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.StreamSubscribeRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.StreamSubscribeRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.StreamSubscribeRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.StreamSubscribeRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.StreamSubscribeRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.StreamSubscribeRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.StreamSubscribeRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.StreamSubscribeRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.StreamSubscribeRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.StreamSubscribeRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.StreamSubscribeRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setStream(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.StreamSubscribeRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.StreamSubscribeRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.StreamSubscribeRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.StreamSubscribeRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.StreamSubscribeRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.StreamSubscribeRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.StreamSubscribeRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.StreamSubscribeRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.StreamSubscribeRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.StreamSubscribeRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "stream";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("stream", 1);
        }
    }

    public static final class SetSimulationTimeRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.SetSimulationTimeRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.SetSimulationTimeRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.SetSimulationTimeRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.SetSimulationTimeRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.SetSimulationTimeRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.SetSimulationTimeRequest message) throws java.io.IOException
            {
                if(message.hasTime0())
                    output.writeInt64(1, message.getTime0(), false);
                if(message.hasTime0UTC())
                    output.writeString(2, message.getTime0UTC(), false);
                if(message.hasSimElapsedTime())
                    output.writeInt64(3, message.getSimElapsedTime(), false);
                if(message.hasSimSpeed())
                    output.writeDouble(4, message.getSimSpeed(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.SetSimulationTimeRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.SetSimulationTimeRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.SetSimulationTimeRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.SetSimulationTimeRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.SetSimulationTimeRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.SetSimulationTimeRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.SetSimulationTimeRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.SetSimulationTimeRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.SetSimulationTimeRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.SetSimulationTimeRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.SetSimulationTimeRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setTime0(input.readInt64());
                            break;
                        case 2:
                            builder.setTime0UTC(input.readString());
                            break;
                        case 3:
                            builder.setSimElapsedTime(input.readInt64());
                            break;
                        case 4:
                            builder.setSimSpeed(input.readDouble());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.SetSimulationTimeRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.SetSimulationTimeRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.SetSimulationTimeRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.SetSimulationTimeRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.SetSimulationTimeRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.SetSimulationTimeRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.SetSimulationTimeRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.SetSimulationTimeRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.SetSimulationTimeRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.SetSimulationTimeRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "time0";
                case 2: return "time0UTC";
                case 3: return "simElapsedTime";
                case 4: return "simSpeed";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("time0", 1);
            fieldMap.put("time0UTC", 2);
            fieldMap.put("simElapsedTime", 3);
            fieldMap.put("simSpeed", 4);
        }
    }

    public static final class ListInstancesResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListInstancesResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListInstancesResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListInstancesResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListInstancesResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListInstancesResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListInstancesResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.YamcsManagement.YamcsInstance instance : message.getInstanceList())
                    output.writeObject(1, instance, org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListInstancesResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListInstancesResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListInstancesResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListInstancesResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListInstancesResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListInstancesResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListInstancesResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListInstancesResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListInstancesResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListInstancesResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListInstancesResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addInstance(input.mergeObject(org.yamcs.protobuf.YamcsManagement.YamcsInstance.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.YamcsInstance.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListInstancesResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListInstancesResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListInstancesResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListInstancesResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListInstancesResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListInstancesResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListInstancesResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListInstancesResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListInstancesResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListInstancesResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "instance";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("instance", 1);
        }
    }

    public static final class ListAlarmsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListAlarmsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListAlarmsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListAlarmsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListAlarmsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListAlarmsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListAlarmsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Alarms.AlarmInfo alarm : message.getAlarmList())
                    output.writeObject(1, alarm, org.yamcs.protobuf.SchemaAlarms.AlarmInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListAlarmsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListAlarmsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListAlarmsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListAlarmsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListAlarmsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListAlarmsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListAlarmsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListAlarmsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListAlarmsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListAlarmsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListAlarmsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addAlarm(input.mergeObject(org.yamcs.protobuf.Alarms.AlarmInfo.newBuilder(), org.yamcs.protobuf.SchemaAlarms.AlarmInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListAlarmsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListAlarmsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListAlarmsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListAlarmsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListAlarmsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListAlarmsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListAlarmsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListAlarmsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListAlarmsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListAlarmsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "alarm";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("alarm", 1);
        }
    }

    public static final class PatchAlarmRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.PatchAlarmRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.PatchAlarmRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.PatchAlarmRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.PatchAlarmRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.PatchAlarmRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.PatchAlarmRequest message) throws java.io.IOException
            {
                if(message.hasState())
                    output.writeString(1, message.getState(), false);
                if(message.hasComment())
                    output.writeString(2, message.getComment(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.PatchAlarmRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.PatchAlarmRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.PatchAlarmRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.PatchAlarmRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.PatchAlarmRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.PatchAlarmRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.PatchAlarmRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.PatchAlarmRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.PatchAlarmRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.PatchAlarmRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.PatchAlarmRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setState(input.readString());
                            break;
                        case 2:
                            builder.setComment(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.PatchAlarmRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.PatchAlarmRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.PatchAlarmRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.PatchAlarmRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.PatchAlarmRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.PatchAlarmRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.PatchAlarmRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.PatchAlarmRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.PatchAlarmRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.PatchAlarmRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "state";
                case 2: return "comment";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("state", 1);
            fieldMap.put("comment", 2);
        }
    }

    public static final class ListTablesResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListTablesResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListTablesResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListTablesResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListTablesResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListTablesResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListTablesResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Archive.TableInfo table : message.getTableList())
                    output.writeObject(1, table, org.yamcs.protobuf.SchemaArchive.TableInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListTablesResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListTablesResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListTablesResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListTablesResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListTablesResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListTablesResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListTablesResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListTablesResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListTablesResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListTablesResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListTablesResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addTable(input.mergeObject(org.yamcs.protobuf.Archive.TableInfo.newBuilder(), org.yamcs.protobuf.SchemaArchive.TableInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListTablesResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListTablesResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListTablesResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListTablesResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListTablesResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListTablesResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListTablesResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListTablesResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListTablesResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListTablesResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "table";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("table", 1);
        }
    }

    public static final class ListStreamsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListStreamsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListStreamsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListStreamsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListStreamsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListStreamsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListStreamsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Archive.StreamInfo stream : message.getStreamList())
                    output.writeObject(1, stream, org.yamcs.protobuf.SchemaArchive.StreamInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListStreamsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListStreamsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListStreamsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListStreamsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListStreamsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListStreamsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListStreamsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListStreamsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListStreamsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListStreamsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListStreamsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addStream(input.mergeObject(org.yamcs.protobuf.Archive.StreamInfo.newBuilder(), org.yamcs.protobuf.SchemaArchive.StreamInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListStreamsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListStreamsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListStreamsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListStreamsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListStreamsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListStreamsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListStreamsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListStreamsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListStreamsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListStreamsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "stream";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("stream", 1);
        }
    }

    public static final class ListEventsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListEventsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListEventsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListEventsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListEventsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListEventsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListEventsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.Event event : message.getEventList())
                    output.writeObject(1, event, org.yamcs.protobuf.SchemaYamcs.Event.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListEventsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListEventsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListEventsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListEventsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListEventsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListEventsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListEventsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListEventsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListEventsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListEventsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListEventsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addEvent(input.mergeObject(org.yamcs.protobuf.Yamcs.Event.newBuilder(), org.yamcs.protobuf.SchemaYamcs.Event.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListEventsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListEventsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListEventsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListEventsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListEventsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListEventsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListEventsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListEventsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListEventsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListEventsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "event";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("event", 1);
        }
    }

    public static final class ListPacketsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListPacketsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListPacketsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListPacketsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListPacketsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListPacketsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListPacketsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.TmPacketData packet : message.getPacketList())
                    output.writeObject(1, packet, org.yamcs.protobuf.SchemaYamcs.TmPacketData.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListPacketsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListPacketsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListPacketsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListPacketsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListPacketsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListPacketsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListPacketsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListPacketsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListPacketsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListPacketsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListPacketsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addPacket(input.mergeObject(org.yamcs.protobuf.Yamcs.TmPacketData.newBuilder(), org.yamcs.protobuf.SchemaYamcs.TmPacketData.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListPacketsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListPacketsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListPacketsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListPacketsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListPacketsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListPacketsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListPacketsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListPacketsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListPacketsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListPacketsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "packet";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("packet", 1);
        }
    }

}
