// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from rest.proto

package org.yamcs.protobuf;


public final class SchemaRest
{

    public static final class RestExceptionMessage
    {
        public static final org.yamcs.protobuf.SchemaRest.RestExceptionMessage.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestExceptionMessage.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestExceptionMessage.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestExceptionMessage.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestExceptionMessage>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestExceptionMessage message) throws java.io.IOException
            {
                if(message.hasType())
                    output.writeString(1, message.getType(), false);
                if(message.hasMsg())
                    output.writeString(2, message.getMsg(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestExceptionMessage message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestExceptionMessage.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestExceptionMessage.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestExceptionMessage> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestExceptionMessage message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestExceptionMessage newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestExceptionMessage.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestExceptionMessage.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setType(input.readString());
                            break;
                        case 2:
                            builder.setMsg(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestExceptionMessage.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestExceptionMessage.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestExceptionMessage.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestExceptionMessage.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestExceptionMessage.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestExceptionMessage.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "type";
                case 2: return "msg";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("type", 1);
            fieldMap.put("msg", 2);
        }
    }

    public static final class RestArgumentType
    {
        public static final org.yamcs.protobuf.SchemaRest.RestArgumentType.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestArgumentType.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestArgumentType.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestArgumentType.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestArgumentType>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestArgumentType message) throws java.io.IOException
            {
                if(message.hasName())
                    output.writeString(1, message.getName(), false);
                if(message.hasValue())
                    output.writeString(2, message.getValue(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestArgumentType message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestArgumentType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestArgumentType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestArgumentType> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestArgumentType message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestArgumentType newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestArgumentType.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestArgumentType.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setName(input.readString());
                            break;
                        case 2:
                            builder.setValue(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestArgumentType.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestArgumentType.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestArgumentType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestArgumentType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestArgumentType.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestArgumentType.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "name";
                case 2: return "value";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("name", 1);
            fieldMap.put("value", 2);
        }
    }

    public static final class RestCommandType
    {
        public static final org.yamcs.protobuf.SchemaRest.RestCommandType.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestCommandType.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestCommandType.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestCommandType.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestCommandType>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestCommandType message) throws java.io.IOException
            {
                if(message.hasOrigin())
                    output.writeString(1, message.getOrigin(), false);
                if(message.hasSequenceNumber())
                    output.writeInt32(2, message.getSequenceNumber(), false);
                if(message.hasId())
                    output.writeObject(3, message.getId(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, false);

                for(org.yamcs.protobuf.Rest.RestArgumentType arguments : message.getArgumentsList())
                    output.writeObject(4, arguments, org.yamcs.protobuf.SchemaRest.RestArgumentType.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestCommandType message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestCommandType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestCommandType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestCommandType> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestCommandType message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestCommandType newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestCommandType.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestCommandType.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setOrigin(input.readString());
                            break;
                        case 2:
                            builder.setSequenceNumber(input.readInt32());
                            break;
                        case 3:
                            builder.setId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 4:
                            builder.addArguments(input.mergeObject(org.yamcs.protobuf.Rest.RestArgumentType.newBuilder(), org.yamcs.protobuf.SchemaRest.RestArgumentType.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestCommandType.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestCommandType.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestCommandType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestCommandType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestCommandType.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestCommandType.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "origin";
                case 2: return "sequenceNumber";
                case 3: return "id";
                case 4: return "arguments";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("origin", 1);
            fieldMap.put("sequenceNumber", 2);
            fieldMap.put("id", 3);
            fieldMap.put("arguments", 4);
        }
    }

    public static final class RestListAvailableParametersRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListAvailableParametersRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListAvailableParametersRequest message) throws java.io.IOException
            {
                for(String namespaces : message.getNamespacesList())
                    output.writeString(1, namespaces, true);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListAvailableParametersRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListAvailableParametersRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListAvailableParametersRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestListAvailableParametersRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addNamespaces(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "namespaces";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("namespaces", 1);
        }
    }

    public static final class RestParameter
    {
        public static final org.yamcs.protobuf.SchemaRest.RestParameter.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestParameter.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestParameter.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestParameter.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestParameter>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestParameter message) throws java.io.IOException
            {
                if(message.hasId())
                    output.writeObject(1, message.getId(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, false);

                if(message.hasDataSource())
                    output.writeEnum(2, message.getDataSource().getNumber(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestParameter message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameter.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameter.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestParameter> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestParameter.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestParameter.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestParameter.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestParameter message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestParameter newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestParameter.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestParameter.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setDataSource(org.yamcs.protobuf.Rest.RestDataSource.valueOf(input.readEnum()));
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestParameter.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestParameter.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestParameter.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameter.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameter.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestParameter.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestParameter.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestParameter.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestParameter.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestParameter.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "id";
                case 2: return "dataSource";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("id", 1);
            fieldMap.put("dataSource", 2);
        }
    }

    public static final class RestListAvailableParametersResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListAvailableParametersResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListAvailableParametersResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Rest.RestParameter parameters : message.getParametersList())
                    output.writeObject(1, parameters, org.yamcs.protobuf.SchemaRest.RestParameter.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListAvailableParametersResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListAvailableParametersResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListAvailableParametersResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestListAvailableParametersResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addParameters(input.mergeObject(org.yamcs.protobuf.Rest.RestParameter.newBuilder(), org.yamcs.protobuf.SchemaRest.RestParameter.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "parameters";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("parameters", 1);
        }
    }

    public static final class RestValidateCommandRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestValidateCommandRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestValidateCommandRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Rest.RestCommandType commands : message.getCommandsList())
                    output.writeObject(1, commands, org.yamcs.protobuf.SchemaRest.RestCommandType.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestValidateCommandRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestValidateCommandRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestValidateCommandRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestValidateCommandRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addCommands(input.mergeObject(org.yamcs.protobuf.Rest.RestCommandType.newBuilder(), org.yamcs.protobuf.SchemaRest.RestCommandType.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "commands";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("commands", 1);
        }
    }

    public static final class RestValidateCommandResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestValidateCommandResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestValidateCommandResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Commanding.CommandSignificance commandsSignificance : message.getCommandsSignificanceList())
                    output.writeObject(1, commandsSignificance, org.yamcs.protobuf.SchemaCommanding.CommandSignificance.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestValidateCommandResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestValidateCommandResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestValidateCommandResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestValidateCommandResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addCommandsSignificance(input.mergeObject(org.yamcs.protobuf.Commanding.CommandSignificance.newBuilder(), org.yamcs.protobuf.SchemaCommanding.CommandSignificance.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "commandsSignificance";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("commandsSignificance", 1);
        }
    }

    public static final class RestDumpRawMdbResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpRawMdbResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpRawMdbResponse message) throws java.io.IOException
            {
                if(message.hasRawMdb())
                    output.writeByteArray(2, message.getRawMdb().toByteArray(), false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpRawMdbResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpRawMdbResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpRawMdbResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestDumpRawMdbResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 2:
                            builder.setRawMdb(com.google.protobuf.ByteString.copyFrom(input.readByteArray()));
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 2: return "rawMdb";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("rawMdb", 2);
        }
    }

    public static final class RestListProcessorsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestListProcessorsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestListProcessorsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestListProcessorsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestListProcessorsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListProcessorsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListProcessorsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.YamcsManagement.ProcessorInfo processor : message.getProcessorList())
                    output.writeObject(1, processor, org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListProcessorsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListProcessorsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListProcessorsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListProcessorsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListProcessorsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListProcessorsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListProcessorsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListProcessorsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestListProcessorsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListProcessorsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListProcessorsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addProcessor(input.mergeObject(org.yamcs.protobuf.YamcsManagement.ProcessorInfo.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.ProcessorInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListProcessorsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestListProcessorsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestListProcessorsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListProcessorsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListProcessorsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListProcessorsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListProcessorsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListProcessorsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListProcessorsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListProcessorsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "processor";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("processor", 1);
        }
    }

    public static final class RestGetParameterRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestGetParameterRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestGetParameterRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId list : message.getListList())
                    output.writeObject(1, list, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

                if(message.hasFromCache())
                    output.writeBool(2, message.getFromCache(), false);
                if(message.hasTimeout())
                    output.writeUInt64(3, message.getTimeout(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestGetParameterRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestGetParameterRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestGetParameterRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestGetParameterRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addList(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setFromCache(input.readBool());
                            break;
                        case 3:
                            builder.setTimeout(input.readUInt64());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "list";
                case 2: return "fromCache";
                case 3: return "timeout";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("list", 1);
            fieldMap.put("fromCache", 2);
            fieldMap.put("timeout", 3);
        }
    }

    public static final class RestDumpArchiveRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpArchiveRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpArchiveRequest message) throws java.io.IOException
            {
                if(message.hasStart())
                    output.writeInt64(1, message.getStart(), false);
                if(message.hasStop())
                    output.writeInt64(2, message.getStop(), false);
                if(message.hasParameterRequest())
                    output.writeObject(3, message.getParameterRequest(), org.yamcs.protobuf.SchemaYamcs.ParameterReplayRequest.WRITE, false);

                if(message.hasPacketRequest())
                    output.writeObject(4, message.getPacketRequest(), org.yamcs.protobuf.SchemaYamcs.PacketReplayRequest.WRITE, false);

                if(message.hasEventRequest())
                    output.writeObject(5, message.getEventRequest(), org.yamcs.protobuf.SchemaYamcs.EventReplayRequest.WRITE, false);

                if(message.hasCommandHistoryRequest())
                    output.writeObject(6, message.getCommandHistoryRequest(), org.yamcs.protobuf.SchemaYamcs.CommandHistoryReplayRequest.WRITE, false);

                if(message.hasPpRequest())
                    output.writeObject(7, message.getPpRequest(), org.yamcs.protobuf.SchemaYamcs.PpReplayRequest.WRITE, false);

                if(message.hasStream())
                    output.writeBool(8, message.getStream(), false);
                if(message.hasUtcStart())
                    output.writeString(9, message.getUtcStart(), false);
                if(message.hasUtcStop())
                    output.writeString(10, message.getUtcStop(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpArchiveRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpArchiveRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpArchiveRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestDumpArchiveRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setStart(input.readInt64());
                            break;
                        case 2:
                            builder.setStop(input.readInt64());
                            break;
                        case 3:
                            builder.setParameterRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.ParameterReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.ParameterReplayRequest.MERGE));

                            break;
                        case 4:
                            builder.setPacketRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.PacketReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.PacketReplayRequest.MERGE));

                            break;
                        case 5:
                            builder.setEventRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.EventReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.EventReplayRequest.MERGE));

                            break;
                        case 6:
                            builder.setCommandHistoryRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.CommandHistoryReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.CommandHistoryReplayRequest.MERGE));

                            break;
                        case 7:
                            builder.setPpRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.PpReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.PpReplayRequest.MERGE));

                            break;
                        case 8:
                            builder.setStream(input.readBool());
                            break;
                        case 9:
                            builder.setUtcStart(input.readString());
                            break;
                        case 10:
                            builder.setUtcStop(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "start";
                case 2: return "stop";
                case 3: return "parameterRequest";
                case 4: return "packetRequest";
                case 5: return "eventRequest";
                case 6: return "commandHistoryRequest";
                case 7: return "ppRequest";
                case 8: return "stream";
                case 9: return "utcStart";
                case 10: return "utcStop";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("start", 1);
            fieldMap.put("stop", 2);
            fieldMap.put("parameterRequest", 3);
            fieldMap.put("packetRequest", 4);
            fieldMap.put("eventRequest", 5);
            fieldMap.put("commandHistoryRequest", 6);
            fieldMap.put("ppRequest", 7);
            fieldMap.put("stream", 8);
            fieldMap.put("utcStart", 9);
            fieldMap.put("utcStop", 10);
        }
    }

    public static final class RestDumpArchiveResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpArchiveResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpArchiveResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Pvalue.ParameterData parameterData : message.getParameterDataList())
                    output.writeObject(2, parameterData, org.yamcs.protobuf.SchemaPvalue.ParameterData.WRITE, true);

                for(org.yamcs.protobuf.Yamcs.TmPacketData packetData : message.getPacketDataList())
                    output.writeObject(3, packetData, org.yamcs.protobuf.SchemaYamcs.TmPacketData.WRITE, true);

                for(org.yamcs.protobuf.Commanding.CommandHistoryEntry command : message.getCommandList())
                    output.writeObject(4, command, org.yamcs.protobuf.SchemaCommanding.CommandHistoryEntry.WRITE, true);

                for(org.yamcs.protobuf.Yamcs.Event event : message.getEventList())
                    output.writeObject(5, event, org.yamcs.protobuf.SchemaYamcs.Event.WRITE, true);

                for(org.yamcs.protobuf.Pvalue.ParameterData ppData : message.getPpDataList())
                    output.writeObject(6, ppData, org.yamcs.protobuf.SchemaPvalue.ParameterData.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpArchiveResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpArchiveResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpArchiveResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestDumpArchiveResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 2:
                            builder.addParameterData(input.mergeObject(org.yamcs.protobuf.Pvalue.ParameterData.newBuilder(), org.yamcs.protobuf.SchemaPvalue.ParameterData.MERGE));

                            break;
                        case 3:
                            builder.addPacketData(input.mergeObject(org.yamcs.protobuf.Yamcs.TmPacketData.newBuilder(), org.yamcs.protobuf.SchemaYamcs.TmPacketData.MERGE));

                            break;
                        case 4:
                            builder.addCommand(input.mergeObject(org.yamcs.protobuf.Commanding.CommandHistoryEntry.newBuilder(), org.yamcs.protobuf.SchemaCommanding.CommandHistoryEntry.MERGE));

                            break;
                        case 5:
                            builder.addEvent(input.mergeObject(org.yamcs.protobuf.Yamcs.Event.newBuilder(), org.yamcs.protobuf.SchemaYamcs.Event.MERGE));

                            break;
                        case 6:
                            builder.addPpData(input.mergeObject(org.yamcs.protobuf.Pvalue.ParameterData.newBuilder(), org.yamcs.protobuf.SchemaPvalue.ParameterData.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 2: return "parameterData";
                case 3: return "packetData";
                case 4: return "command";
                case 5: return "event";
                case 6: return "ppData";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("parameterData", 2);
            fieldMap.put("packetData", 3);
            fieldMap.put("command", 4);
            fieldMap.put("event", 5);
            fieldMap.put("ppData", 6);
        }
    }

    public static final class GetTagsRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.GetTagsRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.GetTagsRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.GetTagsRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.GetTagsRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.GetTagsRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.GetTagsRequest message) throws java.io.IOException
            {
                if(message.hasStart())
                    output.writeInt64(1, message.getStart(), false);
                if(message.hasStop())
                    output.writeInt64(2, message.getStop(), false);
                if(message.hasUtcStart())
                    output.writeString(3, message.getUtcStart(), false);
                if(message.hasUtcStop())
                    output.writeString(4, message.getUtcStop(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.GetTagsRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.GetTagsRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.GetTagsRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.GetTagsRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.GetTagsRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.GetTagsRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.GetTagsRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.GetTagsRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.GetTagsRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.GetTagsRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.GetTagsRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setStart(input.readInt64());
                            break;
                        case 2:
                            builder.setStop(input.readInt64());
                            break;
                        case 3:
                            builder.setUtcStart(input.readString());
                            break;
                        case 4:
                            builder.setUtcStop(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.GetTagsRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.GetTagsRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.GetTagsRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.GetTagsRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.GetTagsRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.GetTagsRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.GetTagsRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.GetTagsRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.GetTagsRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.GetTagsRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "start";
                case 2: return "stop";
                case 3: return "utcStart";
                case 4: return "utcStop";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("start", 1);
            fieldMap.put("stop", 2);
            fieldMap.put("utcStart", 3);
            fieldMap.put("utcStop", 4);
        }
    }

    public static final class GetTagsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.GetTagsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.GetTagsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.GetTagsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.GetTagsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.GetTagsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.GetTagsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.ArchiveTag tags : message.getTagsList())
                    output.writeObject(1, tags, org.yamcs.protobuf.SchemaYamcs.ArchiveTag.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.GetTagsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.GetTagsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.GetTagsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.GetTagsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.GetTagsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.GetTagsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.GetTagsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.GetTagsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.GetTagsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.GetTagsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.GetTagsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addTags(input.mergeObject(org.yamcs.protobuf.Yamcs.ArchiveTag.newBuilder(), org.yamcs.protobuf.SchemaYamcs.ArchiveTag.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.GetTagsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.GetTagsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.GetTagsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.GetTagsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.GetTagsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.GetTagsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.GetTagsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.GetTagsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.GetTagsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.GetTagsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "tags";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("tags", 1);
        }
    }

    public static final class InsertTagRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.InsertTagRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.InsertTagRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.InsertTagRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.InsertTagRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.InsertTagRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.InsertTagRequest message) throws java.io.IOException
            {
                if(message.hasName())
                    output.writeString(1, message.getName(), false);
                if(message.hasStart())
                    output.writeInt64(2, message.getStart(), false);
                if(message.hasStop())
                    output.writeInt64(3, message.getStop(), false);
                if(message.hasDescription())
                    output.writeString(4, message.getDescription(), false);
                if(message.hasColor())
                    output.writeString(5, message.getColor(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.InsertTagRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.InsertTagRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.InsertTagRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.InsertTagRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.InsertTagRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.InsertTagRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.InsertTagRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.InsertTagRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.InsertTagRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.InsertTagRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.InsertTagRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setName(input.readString());
                            break;
                        case 2:
                            builder.setStart(input.readInt64());
                            break;
                        case 3:
                            builder.setStop(input.readInt64());
                            break;
                        case 4:
                            builder.setDescription(input.readString());
                            break;
                        case 5:
                            builder.setColor(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.InsertTagRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.InsertTagRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.InsertTagRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.InsertTagRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.InsertTagRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.InsertTagRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.InsertTagRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.InsertTagRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.InsertTagRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.InsertTagRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "name";
                case 2: return "start";
                case 3: return "stop";
                case 4: return "description";
                case 5: return "color";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("name", 1);
            fieldMap.put("start", 2);
            fieldMap.put("stop", 3);
            fieldMap.put("description", 4);
            fieldMap.put("color", 5);
        }
    }

    public static final class InsertTagResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.InsertTagResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.InsertTagResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.InsertTagResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.InsertTagResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.InsertTagResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.InsertTagResponse message) throws java.io.IOException
            {
                if(message.hasTag())
                    output.writeObject(1, message.getTag(), org.yamcs.protobuf.SchemaYamcs.ArchiveTag.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.InsertTagResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.InsertTagResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.InsertTagResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.InsertTagResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.InsertTagResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.InsertTagResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.InsertTagResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.InsertTagResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.InsertTagResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.InsertTagResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.InsertTagResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setTag(input.mergeObject(org.yamcs.protobuf.Yamcs.ArchiveTag.newBuilder(), org.yamcs.protobuf.SchemaYamcs.ArchiveTag.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.InsertTagResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.InsertTagResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.InsertTagResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.InsertTagResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.InsertTagResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.InsertTagResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.InsertTagResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.InsertTagResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.InsertTagResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.InsertTagResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "tag";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("tag", 1);
        }
    }

    public static final class UpdateTagRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.UpdateTagRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.UpdateTagRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.UpdateTagRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.UpdateTagRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.UpdateTagRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.UpdateTagRequest message) throws java.io.IOException
            {
                if(message.hasName())
                    output.writeString(1, message.getName(), false);
                if(message.hasStart())
                    output.writeInt64(2, message.getStart(), false);
                if(message.hasStop())
                    output.writeInt64(3, message.getStop(), false);
                if(message.hasDescription())
                    output.writeString(4, message.getDescription(), false);
                if(message.hasColor())
                    output.writeString(5, message.getColor(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.UpdateTagRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.UpdateTagRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.UpdateTagRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.UpdateTagRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.UpdateTagRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.UpdateTagRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.UpdateTagRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.UpdateTagRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.UpdateTagRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.UpdateTagRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.UpdateTagRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setName(input.readString());
                            break;
                        case 2:
                            builder.setStart(input.readInt64());
                            break;
                        case 3:
                            builder.setStop(input.readInt64());
                            break;
                        case 4:
                            builder.setDescription(input.readString());
                            break;
                        case 5:
                            builder.setColor(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.UpdateTagRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.UpdateTagRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.UpdateTagRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.UpdateTagRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.UpdateTagRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.UpdateTagRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.UpdateTagRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.UpdateTagRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.UpdateTagRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.UpdateTagRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "name";
                case 2: return "start";
                case 3: return "stop";
                case 4: return "description";
                case 5: return "color";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("name", 1);
            fieldMap.put("start", 2);
            fieldMap.put("stop", 3);
            fieldMap.put("description", 4);
            fieldMap.put("color", 5);
        }
    }

    public static final class GetAlarmsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.GetAlarmsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.GetAlarmsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.GetAlarmsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.GetAlarmsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.GetAlarmsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.GetAlarmsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Alarms.Alarm alarms : message.getAlarmsList())
                    output.writeObject(1, alarms, org.yamcs.protobuf.SchemaAlarms.Alarm.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.GetAlarmsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.GetAlarmsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.GetAlarmsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.GetAlarmsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.GetAlarmsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.GetAlarmsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.GetAlarmsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.GetAlarmsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.GetAlarmsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.GetAlarmsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.GetAlarmsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addAlarms(input.mergeObject(org.yamcs.protobuf.Alarms.Alarm.newBuilder(), org.yamcs.protobuf.SchemaAlarms.Alarm.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.GetAlarmsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.GetAlarmsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.GetAlarmsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.GetAlarmsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.GetAlarmsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.GetAlarmsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.GetAlarmsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.GetAlarmsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.GetAlarmsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.GetAlarmsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "alarms";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("alarms", 1);
        }
    }

    public static final class AcknowledgeAlarmRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest message) throws java.io.IOException
            {
                if(message.hasMessage())
                    output.writeString(1, message.getMessage(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setMessage(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.AcknowledgeAlarmRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "message";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("message", 1);
        }
    }

    public static final class AcknowledgeAlarmResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse message) throws java.io.IOException
            {
                if(message.hasErrorMessage())
                    output.writeString(1, message.getErrorMessage(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setErrorMessage(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.AcknowledgeAlarmResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.AcknowledgeAlarmResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "errorMessage";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("errorMessage", 1);
        }
    }

    public static final class RestSendCommandRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestSendCommandRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestSendCommandRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Rest.RestCommandType commands : message.getCommandsList())
                    output.writeObject(1, commands, org.yamcs.protobuf.SchemaRest.RestCommandType.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestSendCommandRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestSendCommandRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestSendCommandRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestSendCommandRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addCommands(input.mergeObject(org.yamcs.protobuf.Rest.RestCommandType.newBuilder(), org.yamcs.protobuf.SchemaRest.RestCommandType.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "commands";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("commands", 1);
        }
    }

    public static final class RestUnitType
    {
        public static final org.yamcs.protobuf.SchemaRest.RestUnitType.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestUnitType.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestUnitType.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestUnitType.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestUnitType>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestUnitType message) throws java.io.IOException
            {
                if(message.hasUnit())
                    output.writeString(1, message.getUnit(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestUnitType message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestUnitType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestUnitType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestUnitType> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestUnitType.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestUnitType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestUnitType.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestUnitType message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestUnitType newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestUnitType.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestUnitType.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setUnit(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestUnitType.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestUnitType.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestUnitType.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestUnitType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestUnitType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestUnitType.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestUnitType.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestUnitType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestUnitType.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestUnitType.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "unit";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("unit", 1);
        }
    }

    public static final class RestAlarmRange
    {
        public static final org.yamcs.protobuf.SchemaRest.RestAlarmRange.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestAlarmRange.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestAlarmRange.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestAlarmRange.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestAlarmRange>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestAlarmRange message) throws java.io.IOException
            {
                if(message.hasLevel())
                    output.writeEnum(1, message.getLevel().getNumber(), false);
                if(message.hasMinInclusive())
                    output.writeDouble(2, message.getMinInclusive(), false);
                if(message.hasMaxInclusive())
                    output.writeDouble(3, message.getMaxInclusive(), false);
                if(message.hasEnumerationValue())
                    output.writeString(4, message.getEnumerationValue(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestAlarmRange message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestAlarmRange.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestAlarmRange.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestAlarmRange> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestAlarmRange.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestAlarmRange.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestAlarmRange.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestAlarmRange message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestAlarmRange newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestAlarmRange.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestAlarmRange.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setLevel(org.yamcs.protobuf.Rest.RestAlarmLevel.valueOf(input.readEnum()));
                            break;
                        case 2:
                            builder.setMinInclusive(input.readDouble());
                            break;
                        case 3:
                            builder.setMaxInclusive(input.readDouble());
                            break;
                        case 4:
                            builder.setEnumerationValue(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestAlarmRange.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestAlarmRange.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestAlarmRange.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestAlarmRange.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestAlarmRange.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestAlarmRange.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestAlarmRange.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestAlarmRange.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestAlarmRange.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestAlarmRange.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "level";
                case 2: return "minInclusive";
                case 3: return "maxInclusive";
                case 4: return "enumerationValue";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("level", 1);
            fieldMap.put("minInclusive", 2);
            fieldMap.put("maxInclusive", 3);
            fieldMap.put("enumerationValue", 4);
        }
    }

    public static final class RestAlarmInfo
    {
        public static final org.yamcs.protobuf.SchemaRest.RestAlarmInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestAlarmInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestAlarmInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestAlarmInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestAlarmInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestAlarmInfo message) throws java.io.IOException
            {
                if(message.hasMinViolations())
                    output.writeInt32(1, message.getMinViolations(), false);
                for(org.yamcs.protobuf.Rest.RestAlarmRange staticAlarmRanges : message.getStaticAlarmRangesList())
                    output.writeObject(2, staticAlarmRanges, org.yamcs.protobuf.SchemaRest.RestAlarmRange.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestAlarmInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestAlarmInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestAlarmInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestAlarmInfo> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestAlarmInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestAlarmInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestAlarmInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestAlarmInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestAlarmInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestAlarmInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestAlarmInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setMinViolations(input.readInt32());
                            break;
                        case 2:
                            builder.addStaticAlarmRanges(input.mergeObject(org.yamcs.protobuf.Rest.RestAlarmRange.newBuilder(), org.yamcs.protobuf.SchemaRest.RestAlarmRange.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestAlarmInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestAlarmInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestAlarmInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestAlarmInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestAlarmInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestAlarmInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestAlarmInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestAlarmInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestAlarmInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestAlarmInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "minViolations";
                case 2: return "staticAlarmRanges";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("minViolations", 1);
            fieldMap.put("staticAlarmRanges", 2);
        }
    }

    public static final class RestParameterType
    {
        public static final org.yamcs.protobuf.SchemaRest.RestParameterType.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestParameterType.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestParameterType.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestParameterType.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestParameterType>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestParameterType message) throws java.io.IOException
            {
                if(message.hasEngType())
                    output.writeString(1, message.getEngType(), false);
                if(message.hasDataEncoding())
                    output.writeString(2, message.getDataEncoding(), false);
                for(org.yamcs.protobuf.Rest.RestUnitType unitSet : message.getUnitSetList())
                    output.writeObject(3, unitSet, org.yamcs.protobuf.SchemaRest.RestUnitType.WRITE, true);

                if(message.hasDefaultAlarm())
                    output.writeObject(4, message.getDefaultAlarm(), org.yamcs.protobuf.SchemaRest.RestAlarmInfo.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestParameterType message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameterType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameterType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestParameterType> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestParameterType.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestParameterType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestParameterType.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestParameterType message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestParameterType newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestParameterType.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestParameterType.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setEngType(input.readString());
                            break;
                        case 2:
                            builder.setDataEncoding(input.readString());
                            break;
                        case 3:
                            builder.addUnitSet(input.mergeObject(org.yamcs.protobuf.Rest.RestUnitType.newBuilder(), org.yamcs.protobuf.SchemaRest.RestUnitType.MERGE));

                            break;
                        case 4:
                            builder.setDefaultAlarm(input.mergeObject(org.yamcs.protobuf.Rest.RestAlarmInfo.newBuilder(), org.yamcs.protobuf.SchemaRest.RestAlarmInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestParameterType.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestParameterType.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestParameterType.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameterType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameterType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestParameterType.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestParameterType.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestParameterType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestParameterType.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestParameterType.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "engType";
                case 2: return "dataEncoding";
                case 3: return "unitSet";
                case 4: return "defaultAlarm";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("engType", 1);
            fieldMap.put("dataEncoding", 2);
            fieldMap.put("unitSet", 3);
            fieldMap.put("defaultAlarm", 4);
        }
    }

    public static final class RestNameDescription
    {
        public static final org.yamcs.protobuf.SchemaRest.RestNameDescription.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestNameDescription.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestNameDescription.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestNameDescription.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestNameDescription>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestNameDescription message) throws java.io.IOException
            {
                if(message.hasQualifiedName())
                    output.writeString(1, message.getQualifiedName(), false);
                if(message.hasShortDescription())
                    output.writeString(2, message.getShortDescription(), false);
                if(message.hasLongDescription())
                    output.writeString(3, message.getLongDescription(), false);
                for(org.yamcs.protobuf.Yamcs.NamedObjectId aliases : message.getAliasesList())
                    output.writeObject(4, aliases, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestNameDescription message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestNameDescription.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestNameDescription.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestNameDescription> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestNameDescription.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestNameDescription.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestNameDescription.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestNameDescription message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestNameDescription newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestNameDescription.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestNameDescription.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setQualifiedName(input.readString());
                            break;
                        case 2:
                            builder.setShortDescription(input.readString());
                            break;
                        case 3:
                            builder.setLongDescription(input.readString());
                            break;
                        case 4:
                            builder.addAliases(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestNameDescription.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestNameDescription.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestNameDescription.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestNameDescription.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestNameDescription.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestNameDescription.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestNameDescription.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestNameDescription.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestNameDescription.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestNameDescription.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "qualifiedName";
                case 2: return "shortDescription";
                case 3: return "longDescription";
                case 4: return "aliases";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("qualifiedName", 1);
            fieldMap.put("shortDescription", 2);
            fieldMap.put("longDescription", 3);
            fieldMap.put("aliases", 4);
        }
    }

    public static final class RestParameterInfo
    {
        public static final org.yamcs.protobuf.SchemaRest.RestParameterInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestParameterInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestParameterInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestParameterInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestParameterInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestParameterInfo message) throws java.io.IOException
            {
                if(message.hasId())
                    output.writeObject(1, message.getId(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, false);

                if(message.hasDescription())
                    output.writeObject(2, message.getDescription(), org.yamcs.protobuf.SchemaRest.RestNameDescription.WRITE, false);

                if(message.hasType())
                    output.writeObject(3, message.getType(), org.yamcs.protobuf.SchemaRest.RestParameterType.WRITE, false);

                if(message.hasDataSource())
                    output.writeString(4, message.getDataSource(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestParameterInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameterInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameterInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestParameterInfo> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestParameterInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestParameterInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestParameterInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestParameterInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestParameterInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestParameterInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestParameterInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setDescription(input.mergeObject(org.yamcs.protobuf.Rest.RestNameDescription.newBuilder(), org.yamcs.protobuf.SchemaRest.RestNameDescription.MERGE));

                            break;
                        case 3:
                            builder.setType(input.mergeObject(org.yamcs.protobuf.Rest.RestParameterType.newBuilder(), org.yamcs.protobuf.SchemaRest.RestParameterType.MERGE));

                            break;
                        case 4:
                            builder.setDataSource(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestParameterInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestParameterInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestParameterInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameterInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestParameterInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestParameterInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestParameterInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestParameterInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestParameterInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestParameterInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "id";
                case 2: return "description";
                case 3: return "type";
                case 4: return "dataSource";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("id", 1);
            fieldMap.put("description", 2);
            fieldMap.put("type", 3);
            fieldMap.put("dataSource", 4);
        }
    }

    public static final class RestGetParameterInfoRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestGetParameterInfoRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestGetParameterInfoRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestGetParameterInfoRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestGetParameterInfoRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestGetParameterInfoRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestGetParameterInfoRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId list : message.getListList())
                    output.writeObject(1, list, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestGetParameterInfoRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterInfoRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterInfoRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestGetParameterInfoRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestGetParameterInfoRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestGetParameterInfoRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addList(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterInfoRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterInfoRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestGetParameterInfoRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "list";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("list", 1);
        }
    }

    public static final class RestGetParameterInfoResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestGetParameterInfoResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestGetParameterInfoResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestGetParameterInfoResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestGetParameterInfoResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestGetParameterInfoResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestGetParameterInfoResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Rest.RestParameterInfo pinfo : message.getPinfoList())
                    output.writeObject(1, pinfo, org.yamcs.protobuf.SchemaRest.RestParameterInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestGetParameterInfoResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterInfoResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterInfoResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestGetParameterInfoResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestGetParameterInfoResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestGetParameterInfoResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addPinfo(input.mergeObject(org.yamcs.protobuf.Rest.RestParameterInfo.newBuilder(), org.yamcs.protobuf.SchemaRest.RestParameterInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterInfoResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterInfoResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestGetParameterInfoResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "pinfo";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("pinfo", 1);
        }
    }

    public static final class ListClientsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.ListClientsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.ListClientsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.ListClientsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.ListClientsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListClientsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListClientsResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.YamcsManagement.ClientInfo clientInfo : message.getClientInfoList())
                    output.writeObject(1, clientInfo, org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListClientsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListClientsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListClientsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListClientsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListClientsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.ListClientsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.ListClientsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.ListClientsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addClientInfo(input.mergeObject(org.yamcs.protobuf.YamcsManagement.ClientInfo.newBuilder(), org.yamcs.protobuf.SchemaYamcsManagement.ClientInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.ListClientsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.ListClientsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.ListClientsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.ListClientsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.ListClientsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.ListClientsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.ListClientsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "clientInfo";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("clientInfo", 1);
        }
    }

    public static final class UserAuthorizationsInfo
    {
        public static final org.yamcs.protobuf.SchemaRest.UserAuthorizationsInfo.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.UserAuthorizationsInfo.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.UserAuthorizationsInfo.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.UserAuthorizationsInfo.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.UserAuthorizationsInfo>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.UserAuthorizationsInfo message) throws java.io.IOException
            {
                for(String roles : message.getRolesList())
                    output.writeString(1, roles, true);
                for(String tmParaPrivileges : message.getTmParaPrivilegesList())
                    output.writeString(2, tmParaPrivileges, true);
                for(String tmParaSetPrivileges : message.getTmParaSetPrivilegesList())
                    output.writeString(3, tmParaSetPrivileges, true);
                for(String tmPacketPrivileges : message.getTmPacketPrivilegesList())
                    output.writeString(4, tmPacketPrivileges, true);
                for(String tcPrivileges : message.getTcPrivilegesList())
                    output.writeString(5, tcPrivileges, true);
                for(String systemPrivileges : message.getSystemPrivilegesList())
                    output.writeString(6, systemPrivileges, true);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.UserAuthorizationsInfo message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.UserAuthorizationsInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.UserAuthorizationsInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.UserAuthorizationsInfo> typeClass()
            {
                return org.yamcs.protobuf.Rest.UserAuthorizationsInfo.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.UserAuthorizationsInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.UserAuthorizationsInfo.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.UserAuthorizationsInfo message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.UserAuthorizationsInfo newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.UserAuthorizationsInfo.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.UserAuthorizationsInfo.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addRoles(input.readString());
                            break;
                        case 2:
                            builder.addTmParaPrivileges(input.readString());
                            break;
                        case 3:
                            builder.addTmParaSetPrivileges(input.readString());
                            break;
                        case 4:
                            builder.addTmPacketPrivileges(input.readString());
                            break;
                        case 5:
                            builder.addTcPrivileges(input.readString());
                            break;
                        case 6:
                            builder.addSystemPrivileges(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.UserAuthorizationsInfo.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.UserAuthorizationsInfo.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.UserAuthorizationsInfo.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.UserAuthorizationsInfo.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.UserAuthorizationsInfo.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.UserAuthorizationsInfo.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.UserAuthorizationsInfo.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.UserAuthorizationsInfo.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.UserAuthorizationsInfo.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.UserAuthorizationsInfo.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "roles";
                case 2: return "tmParaPrivileges";
                case 3: return "tmParaSetPrivileges";
                case 4: return "tmPacketPrivileges";
                case 5: return "tcPrivileges";
                case 6: return "systemPrivileges";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("roles", 1);
            fieldMap.put("tmParaPrivileges", 2);
            fieldMap.put("tmParaSetPrivileges", 3);
            fieldMap.put("tmPacketPrivileges", 4);
            fieldMap.put("tcPrivileges", 5);
            fieldMap.put("systemPrivileges", 6);
        }
    }

    public static final class RestListAuthorisationsResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestListAuthorisationsResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestListAuthorisationsResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestListAuthorisationsResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestListAuthorisationsResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListAuthorisationsResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListAuthorisationsResponse message) throws java.io.IOException
            {
                if(message.hasUserAuthorizationsInfo())
                    output.writeObject(1, message.getUserAuthorizationsInfo(), org.yamcs.protobuf.SchemaRest.UserAuthorizationsInfo.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListAuthorisationsResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAuthorisationsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAuthorisationsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListAuthorisationsResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListAuthorisationsResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestListAuthorisationsResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setUserAuthorizationsInfo(input.mergeObject(org.yamcs.protobuf.Rest.UserAuthorizationsInfo.newBuilder(), org.yamcs.protobuf.SchemaRest.UserAuthorizationsInfo.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAuthorisationsResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAuthorisationsResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListAuthorisationsResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "userAuthorizationsInfo";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("userAuthorizationsInfo", 1);
        }
    }

    public static final class RestSetSimulationTimeRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestSetSimulationTimeRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestSetSimulationTimeRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestSetSimulationTimeRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestSetSimulationTimeRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest message) throws java.io.IOException
            {
                if(message.hasTime0())
                    output.writeInt64(1, message.getTime0(), false);
                if(message.hasTime0UTC())
                    output.writeString(2, message.getTime0UTC(), false);
                if(message.hasSimElapsedTime())
                    output.writeInt64(3, message.getSimElapsedTime(), false);
                if(message.hasSimSpeed())
                    output.writeDouble(4, message.getSimSpeed(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestSetSimulationTimeRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestSetSimulationTimeRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setTime0(input.readInt64());
                            break;
                        case 2:
                            builder.setTime0UTC(input.readString());
                            break;
                        case 3:
                            builder.setSimElapsedTime(input.readInt64());
                            break;
                        case 4:
                            builder.setSimSpeed(input.readDouble());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestSetSimulationTimeRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestSetSimulationTimeRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestSetSimulationTimeRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "time0";
                case 2: return "time0UTC";
                case 3: return "simElapsedTime";
                case 4: return "simSpeed";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("time0", 1);
            fieldMap.put("time0UTC", 2);
            fieldMap.put("simElapsedTime", 3);
            fieldMap.put("simSpeed", 4);
        }
    }

}
