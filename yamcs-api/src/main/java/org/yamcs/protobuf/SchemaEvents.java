// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from events.proto

package org.yamcs.protobuf;


public final class SchemaEvents
{

    public static final class GetEventsRequest
    {
        public static final org.yamcs.protobuf.SchemaEvents.GetEventsRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaEvents.GetEventsRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaEvents.GetEventsRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaEvents.GetEventsRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Events.GetEventsRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Events.GetEventsRequest message) throws java.io.IOException
            {
                if(message.hasStart())
                    output.writeInt64(1, message.getStart(), false);
                if(message.hasStop())
                    output.writeInt64(2, message.getStop(), false);
                if(message.hasUtcStart())
                    output.writeString(3, message.getUtcStart(), false);
                if(message.hasUtcStop())
                    output.writeString(4, message.getUtcStop(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Events.GetEventsRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaEvents.GetEventsRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaEvents.GetEventsRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Events.GetEventsRequest> typeClass()
            {
                return org.yamcs.protobuf.Events.GetEventsRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Events.GetEventsRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Events.GetEventsRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Events.GetEventsRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Events.GetEventsRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Events.GetEventsRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Events.GetEventsRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setStart(input.readInt64());
                            break;
                        case 2:
                            builder.setStop(input.readInt64());
                            break;
                        case 3:
                            builder.setUtcStart(input.readString());
                            break;
                        case 4:
                            builder.setUtcStop(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Events.GetEventsRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Events.GetEventsRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Events.GetEventsRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaEvents.GetEventsRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaEvents.GetEventsRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Events.GetEventsRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Events.GetEventsRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Events.GetEventsRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Events.GetEventsRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Events.GetEventsRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "start";
                case 2: return "stop";
                case 3: return "utcStart";
                case 4: return "utcStop";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("start", 1);
            fieldMap.put("stop", 2);
            fieldMap.put("utcStart", 3);
            fieldMap.put("utcStop", 4);
        }
    }

}
